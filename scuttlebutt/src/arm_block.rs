//! Defines a block as a 128-bit value, and implements block-related functions.

#[cfg(feature = "curve25519-dalek")]
use crate::Aes256;
#[cfg(feature = "curve25519-dalek")]
use curve25519_dalek::ristretto::RistrettoPoint;
use std::{
    hash::{Hash, Hasher},
};


use std::arch::aarch64::*;
use std::ops::BitXor;

/// Interpret a block as an element of the field F_{2^128}
#[derive(Copy, Clone, Debug, Default, Eq, PartialEq)]
pub struct F128(ArmBlock);

impl F128 {
    pub fn one() -> Self {Self(ArmBlock(ONE))}

    /// Multiply by the field element X \in GF_{2}[X] / (X^128 + X^7 + X^2 + X + 1 )
    ///
    /// Not constant time!
    pub fn mul_x(self) -> Self {
        Self(ArmBlock(unsafe {
            let h = ArmBlock::extract_i_u64(&self.0, 0);
            let l = ArmBlock::extract_i_u64(&self.0, 1);

            let c_h = h >> 63;
            let c_l = l >> 63;

            debug_assert!(c_h < 2);
            debug_assert!(c_l < 2);
            let l = if c_h == 1 {
                (l << 1) ^ 0b10000111
            } else {
                l << 1
            };
            let h = (h << 1) | c_l;

            uint64x2_t(h, l);


        }))
    }

    pub fn ret_self(&self) -> ArmBlock {
        self.0
    }
}


impl F128 {

    #[inline(always)]
    pub fn cmul(&self, other: F128) -> (ArmBlock, ArmBlock) {
        self.0.clmul(other.0)
    }
}

// TODO: Doubt this works
union __U128 {
    vector: uint64x2_t,
    bytes: u128,
}

const ONE: uint64x2_t = unsafe { (__U128 {bytes: 1}).vector };

/// A 128-bit chunk.
#[derive(Clone, Copy)]
pub struct ArmBlock(pub uint64x2_t);

impl ArmBlock {
    /// Convert into a pointer
    #[inline]
    pub fn as_ptr(&self) -> *const u8 { self.as_ref().as_ptr() }

    /// Extract i'th element as u64
    #[inline]
    pub fn extract_i_u64(&self, i: i8) -> u64 {
        unsafe {
            vgetq_lane_u64::<i>(self.0) as u64
        }
    }

    /// Convert into a mutable pointer.
    #[inline]
    pub fn as_mut_ptr(&mut self) -> *mut u8 {
        self.as_mut().as_mut_ptr()
    }

    /// Carryless multiplication.
    ///
    /// This code is adapted from the EMP toolkit's implementation.
    #[inline]
    pub fn clmul(self, rhs: Self) -> (Self, Self) {
        unsafe {
            let x = self.0;
            let y = rhs.0;

            // zero
            let zero_x = vgetq_lane_u64::<0>(x);
            let zero_y = vgetq_lane_u64::<0>(y);
            let zero = vmull_p64(zero_x, zero_y);

            // one
            let one_x = vgetq_lane_u64::<1>(x);
            let one_y = vgetq_lane_u64::<0>(y);
            let one: p128 = vmull_p64(one_x, one_y);

            // two
            let two_x = vgetq_lane_u64::<0>(x);
            let two_y = vgetq_lane_u64::<1>(y);
            let two = vmull_p64(two_x, two_y);

            let three_x = vgetq_lane_u64::<1>(x);
            let three_y = vgetq_lane_u64::<1>(y);
            let three = vmull_p64(three_x, three_y);

            // vld1q_u8() Takes u8 pointer and makes it something arm
            one.bitxor(two);

            let ll = vextq_s8::<8>(vdupq_n_s8(0), one as int8x16_t);
            let rl = vextq_s8::<8>(one as int8x16_t, vdupq_n_s8(0));

            let x = zero.bitxor(ll);
            let y = three.bitxor(rl);

            (ArmBlock(x), ArmBlock(y))
        }
    }
}

impl AsRef<[u8]> for ArmBlock {
    #[inline]
    fn as_ref(&self) -> &[u8] {
        unsafe { &*(self as *const ArmBlock as *const [u8; 16]) }
    }
}

impl std::fmt::Debug for ArmBlock {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        let val: u128 = (*self).into();
        write!(f, "{:032X}", val)
    }
}

impl From<u128> for ArmBlock {
    #[inline]
    fn from(m: u128) -> Self {
        unsafe { std::mem::transmute(m) }
        // XXX: the below doesn't work due to pointer-alignment issues.
        // unsafe { *(&m as *const _ as *const Block) }
    }
}

impl From<ArmBlock> for F128 {
    #[inline]
    fn from(block: ArmBlock) -> Self {
        Self(block)
    }
}


#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_gf128_mul() {
        let tests: Vec<(u128, u128, u128)> = vec![
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000001,
                0x00000000000000000000000000000002,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000004,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000004,
                0x00000000000000000000000000000008,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000008,
                0x00000000000000000000000000000010,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000010,
                0x00000000000000000000000000000020,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000020,
                0x00000000000000000000000000000040,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000040,
                0x00000000000000000000000000000080,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000080,
                0x00000000000000000000000000000100,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000100,
                0x00000000000000000000000000000200,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000200,
                0x00000000000000000000000000000400,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000400,
                0x00000000000000000000000000000800,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000000800,
                0x00000000000000000000000000001000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000001000,
                0x00000000000000000000000000002000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000002000,
                0x00000000000000000000000000004000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000004000,
                0x00000000000000000000000000008000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000008000,
                0x00000000000000000000000000010000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000010000,
                0x00000000000000000000000000020000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000020000,
                0x00000000000000000000000000040000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000040000,
                0x00000000000000000000000000080000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000080000,
                0x00000000000000000000000000100000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000100000,
                0x00000000000000000000000000200000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000200000,
                0x00000000000000000000000000400000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000400000,
                0x00000000000000000000000000800000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000000800000,
                0x00000000000000000000000001000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000001000000,
                0x00000000000000000000000002000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000002000000,
                0x00000000000000000000000004000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000004000000,
                0x00000000000000000000000008000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000008000000,
                0x00000000000000000000000010000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000010000000,
                0x00000000000000000000000020000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000020000000,
                0x00000000000000000000000040000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000040000000,
                0x00000000000000000000000080000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000080000000,
                0x00000000000000000000000100000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000100000000,
                0x00000000000000000000000200000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000200000000,
                0x00000000000000000000000400000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000400000000,
                0x00000000000000000000000800000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000000800000000,
                0x00000000000000000000001000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000001000000000,
                0x00000000000000000000002000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000002000000000,
                0x00000000000000000000004000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000004000000000,
                0x00000000000000000000008000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000008000000000,
                0x00000000000000000000010000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000010000000000,
                0x00000000000000000000020000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000020000000000,
                0x00000000000000000000040000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000040000000000,
                0x00000000000000000000080000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000080000000000,
                0x00000000000000000000100000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000100000000000,
                0x00000000000000000000200000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000200000000000,
                0x00000000000000000000400000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000400000000000,
                0x00000000000000000000800000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000000800000000000,
                0x00000000000000000001000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000001000000000000,
                0x00000000000000000002000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000002000000000000,
                0x00000000000000000004000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000004000000000000,
                0x00000000000000000008000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000008000000000000,
                0x00000000000000000010000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000010000000000000,
                0x00000000000000000020000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000020000000000000,
                0x00000000000000000040000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000040000000000000,
                0x00000000000000000080000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000080000000000000,
                0x00000000000000000100000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000100000000000000,
                0x00000000000000000200000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000200000000000000,
                0x00000000000000000400000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000400000000000000,
                0x00000000000000000800000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000000800000000000000,
                0x00000000000000001000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000001000000000000000,
                0x00000000000000002000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000002000000000000000,
                0x00000000000000004000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000004000000000000000,
                0x00000000000000008000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000008000000000000000,
                0x00000000000000010000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000010000000000000000,
                0x00000000000000020000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000020000000000000000,
                0x00000000000000040000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000040000000000000000,
                0x00000000000000080000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000080000000000000000,
                0x00000000000000100000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000100000000000000000,
                0x00000000000000200000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000200000000000000000,
                0x00000000000000400000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000400000000000000000,
                0x00000000000000800000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000000800000000000000000,
                0x00000000000001000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000001000000000000000000,
                0x00000000000002000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000002000000000000000000,
                0x00000000000004000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000004000000000000000000,
                0x00000000000008000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000008000000000000000000,
                0x00000000000010000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000010000000000000000000,
                0x00000000000020000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000020000000000000000000,
                0x00000000000040000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000040000000000000000000,
                0x00000000000080000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000080000000000000000000,
                0x00000000000100000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000100000000000000000000,
                0x00000000000200000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000200000000000000000000,
                0x00000000000400000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000400000000000000000000,
                0x00000000000800000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000000800000000000000000000,
                0x00000000001000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000001000000000000000000000,
                0x00000000002000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000002000000000000000000000,
                0x00000000004000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000004000000000000000000000,
                0x00000000008000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000008000000000000000000000,
                0x00000000010000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000010000000000000000000000,
                0x00000000020000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000020000000000000000000000,
                0x00000000040000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000040000000000000000000000,
                0x00000000080000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000080000000000000000000000,
                0x00000000100000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000100000000000000000000000,
                0x00000000200000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000200000000000000000000000,
                0x00000000400000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000400000000000000000000000,
                0x00000000800000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000000800000000000000000000000,
                0x00000001000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000001000000000000000000000000,
                0x00000002000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000002000000000000000000000000,
                0x00000004000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000004000000000000000000000000,
                0x00000008000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000008000000000000000000000000,
                0x00000010000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000010000000000000000000000000,
                0x00000020000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000020000000000000000000000000,
                0x00000040000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000040000000000000000000000000,
                0x00000080000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000080000000000000000000000000,
                0x00000100000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000100000000000000000000000000,
                0x00000200000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000200000000000000000000000000,
                0x00000400000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000400000000000000000000000000,
                0x00000800000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00000800000000000000000000000000,
                0x00001000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00001000000000000000000000000000,
                0x00002000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00002000000000000000000000000000,
                0x00004000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00004000000000000000000000000000,
                0x00008000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00008000000000000000000000000000,
                0x00010000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00010000000000000000000000000000,
                0x00020000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00020000000000000000000000000000,
                0x00040000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00040000000000000000000000000000,
                0x00080000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00080000000000000000000000000000,
                0x00100000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00100000000000000000000000000000,
                0x00200000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00200000000000000000000000000000,
                0x00400000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00400000000000000000000000000000,
                0x00800000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x00800000000000000000000000000000,
                0x01000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x01000000000000000000000000000000,
                0x02000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x02000000000000000000000000000000,
                0x04000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x04000000000000000000000000000000,
                0x08000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x08000000000000000000000000000000,
                0x10000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x10000000000000000000000000000000,
                0x20000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x20000000000000000000000000000000,
                0x40000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x40000000000000000000000000000000,
                0x80000000000000000000000000000000,
            ),
            (
                0x00000000000000000000000000000002,
                0x80000000000000000000000000000000,
                0x00000000000000000000000000000087,
            ),
            (
                0x00593c1eca9a5abe6dac284196d57be5,
                0x2966222a9ac54973f3919363a1df59a5,
                0x12790d18ae3af0d3d366f46cc552a6b3,
            ),
            (
                0x47c5d6c6f60adb595fa98c8836292c15,
                0xf20c5c40bafae9d57dd3037565922165,
                0x47d742a798fbd5eb3b72891edd2e30ee,
            ),
            (
                0x2f318a0428cc1c58f669534d967f0564,
                0xf78a2b0f82734e6c3854ff278a8d3db9,
                0x6a76e9bd6cad28f24ae0ab0a328a5432,
            ),
            (
                0x7e1ab5455ebad9052b9259c8dfcbda60,
                0x3c1aa69c0b462c42f9c43d8f84c256f7,
                0x065ea9821d86bec3f9d57016fe79a3c1,
            ),
            (
                0xb9251b3fd89a5d68be01dc942cd2eaf4,
                0x8f7fcbb6ae127a6efc82888a4f564cd3,
                0xc51fcba3e16f6ffc4cd5e76d2b9d2b18,
            ),
            (
                0x60411984f3f261ae83f9bac9a882e89f,
                0x35f907b8c4148abd9e2f79ed450b1ee0,
                0xfd08c4e29085b5c9b40c8d205e3b9edc,
            ),
            (
                0x949a895338d910af681e5decaab3a393,
                0xa01933807d7521268550b6e919940e4b,
                0x1d8c5f6be4ceaa8d2cb41b5505bd846c,
            ),
            (
                0x169aa8366613a667d5696de50cfad092,
                0x148281e43db9921a43712794f24c987a,
                0xe131e1e3b540cdb51675761ad73991a4,
            ),
            (
                0x3f2ae6207c11c544eb6a3b29b9b1f846,
                0xb4b1441b102f1eef3deed8f2866ecb5d,
                0x34df145d75f362e172dc63976a9de23c,
            ),
            (
                0xa3a4f4952441718617c659ab4b838bc7,
                0xfef4e58e055b3cb8cb4f789ae43cd5cf,
                0x2e8ff2669d0f39ed034904e2b7bc38da,
            ),
        ];

        for (a, b, c) in tests {
            let a: ArmBlock = a.into();
            let b: ArmBlock = b.into();
            let c: ArmBlock = c.into();
            let a: F128 = a.into();
            let b: F128 = b.into();
            let c: F128 = c.into();
            println!(
                "a = {:?}, b = {:?}, a * b = {:?}, cmul = {:?}",
                a,
                b,
                c,
                a.cmul(b)
            );
            assert_eq!(a * b, c);
        }
    }
}